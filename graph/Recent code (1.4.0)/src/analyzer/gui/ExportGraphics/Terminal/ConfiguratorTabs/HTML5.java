/* This file is part of TraceMetrics
 *
 * TraceMetrics is a trace file analyzer for Network Simulator 3 (www.nsnam.org).
 * The goal is to calculate useful metrics for research and performance measurement.
 * URL: www.tracemetrics.net
 *
 * Copyright (C) 2012  Luiz Felipe Zafra Saggioro
 * Copyright (C) 2012  Flavio Barbieri Gonzaga
 * Copyright (C) 2012  Reuel Ramos Ribeiro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package analyzer.gui.ExportGraphics.Terminal.ConfiguratorTabs;

import analyzer.controller.Utils;
import analyzer.gui.ExportGraphics.Terminal.TerminalConfigurations.CanvasConfiguration;
import analyzer.gui.ExportGraphics.Terminal.TerminalConfigurator;
import analyzer.gui.ExportGraphics.Terminal.TerminalTypes;
import analyzer.gui.ExportGraphics.Terminal.MeasureUnit;
import java.awt.event.ItemEvent;

/**
 * A panel that will be used as tab on
 * <code>TerminalConfigurator</code>.
 *
 * @since 1.2.0
 */
public class HTML5 extends javax.swing.JPanel implements TabConfiguration {

    private final TerminalConfigurator parent;

    public HTML5(TerminalConfigurator instance) {
        parent = instance;
        initComponents();
        jTF_canvasJsDirectoryName.setText("plot_scripts");
        jTF_canvasTitle.setText(((CanvasConfiguration) instance.getTerminalConfiguration(TerminalTypes.CANVAS)).getTitle());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jL_canvasWidth = new javax.swing.JLabel();
        jSpinner_canvasWidth = new javax.swing.JSpinner();
        jL_canvasHeight = new javax.swing.JLabel();
        jSpinner_canvasHeight = new javax.swing.JSpinner();
        jL_canvasUnit = new javax.swing.JLabel();
        jCoB_canvasUnits = new javax.swing.JComboBox();
        jL_canvasTitle = new javax.swing.JLabel();
        jTF_canvasTitle = new javax.swing.JTextField();
        jCB_canvasNoTitle = new javax.swing.JCheckBox();
        jCB_canvasUseCustomJsDirectory = new javax.swing.JCheckBox();
        jCB_canvasEnableEnhacedMouse = new javax.swing.JCheckBox();
        jTF_canvasJsDirectoryName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSpinner_canvasLineWidth = new javax.swing.JSpinner();
        jTB_canvasLockProportion = new javax.swing.JToggleButton();

        jL_canvasWidth.setText("Width");

        jSpinner_canvasWidth.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner_canvasWidth.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(600.0d), Double.valueOf(1.0d), null, Double.valueOf(0.1d)));
        jSpinner_canvasWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_canvasWidthStateChanged(evt);
            }
        });

        jL_canvasHeight.setText("Height");

        jSpinner_canvasHeight.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner_canvasHeight.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(400.0d), Double.valueOf(1.0d), null, Double.valueOf(0.1d)));
        jSpinner_canvasHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_canvasHeightStateChanged(evt);
            }
        });

        jL_canvasUnit.setText("unit");

        jCoB_canvasUnits.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "px" }));

        jL_canvasTitle.setText("Title");

        jCB_canvasNoTitle.setText("Default title");
        jCB_canvasNoTitle.setToolTipText("Default title is determined by gnuplot");
        jCB_canvasNoTitle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_canvasNoTitleItemStateChanged(evt);
            }
        });

        jCB_canvasUseCustomJsDirectory.setText("Custom JS directory name");
        jCB_canvasUseCustomJsDirectory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_canvasUseCustomJsDirectoryItemStateChanged(evt);
            }
        });

        jCB_canvasEnableEnhacedMouse.setSelected(true);
        jCB_canvasEnableEnhacedMouse.setText("Enable enhaced mouse features");

        jTF_canvasJsDirectoryName.setEnabled(false);

        jLabel1.setText("Line width");

        jSpinner_canvasLineWidth.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, 10.0d, 0.1d));

        jTB_canvasLockProportion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/analyzer/gui/images/unlock-icon.png"))); // NOI18N
        jTB_canvasLockProportion.setRolloverEnabled(true);
        jTB_canvasLockProportion.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/analyzer/gui/images/unlock-icon.png"))); // NOI18N
        jTB_canvasLockProportion.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/analyzer/gui/images/lock-icon.png"))); // NOI18N
        jTB_canvasLockProportion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jTB_canvasLockProportionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jL_canvasTitle)
                            .addGap(23, 23, 23)
                            .addComponent(jTF_canvasTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jCB_canvasNoTitle))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jCB_canvasUseCustomJsDirectory)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTF_canvasJsDirectoryName))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jL_canvasWidth)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSpinner_canvasWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jL_canvasHeight)
                            .addGap(10, 10, 10)
                            .addComponent(jSpinner_canvasHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTB_canvasLockProportion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jL_canvasUnit)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jCoB_canvasUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCB_canvasEnableEnhacedMouse)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner_canvasLineWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_canvasTitle)
                    .addComponent(jTF_canvasTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB_canvasNoTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCB_canvasUseCustomJsDirectory)
                    .addComponent(jTF_canvasJsDirectoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTB_canvasLockProportion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinner_canvasWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jL_canvasWidth)
                        .addComponent(jL_canvasHeight)
                        .addComponent(jSpinner_canvasHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCoB_canvasUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jL_canvasUnit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner_canvasLineWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB_canvasEnableEnhacedMouse))
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinner_canvasWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_canvasWidthStateChanged
        if (jTB_canvasLockProportion.isSelected()) {
            jSpinner_canvasHeight.setValue(new Double(jSpinner_canvasWidth.getValue().toString()) / parent.getTerminalConfiguration(TerminalTypes.CANVAS).getProportion());
        }
    }//GEN-LAST:event_jSpinner_canvasWidthStateChanged

    private void jSpinner_canvasHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_canvasHeightStateChanged
        if (jTB_canvasLockProportion.isSelected()) {
            jSpinner_canvasWidth.setValue(new Double(jSpinner_canvasHeight.getValue().toString()) * parent.getTerminalConfiguration(TerminalTypes.CANVAS).getProportion());
        }
    }//GEN-LAST:event_jSpinner_canvasHeightStateChanged

    private void jCB_canvasNoTitleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_canvasNoTitleItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            jTF_canvasTitle.setEnabled(false);
        } else {
            jTF_canvasTitle.setEnabled(true);
        }
    }//GEN-LAST:event_jCB_canvasNoTitleItemStateChanged

    private void jCB_canvasUseCustomJsDirectoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_canvasUseCustomJsDirectoryItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            jTF_canvasJsDirectoryName.setEnabled(true);
        } else {
            jTF_canvasJsDirectoryName.setEnabled(false);
        }
    }//GEN-LAST:event_jCB_canvasUseCustomJsDirectoryItemStateChanged

    private void jTB_canvasLockProportionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jTB_canvasLockProportionItemStateChanged
        if (jTB_canvasLockProportion.isSelected()) {
            parent.getTerminalConfiguration(TerminalTypes.CANVAS).setProportion(new Double(jSpinner_canvasWidth.getValue().toString()), new Double(jSpinner_canvasHeight.getValue().toString()));
        }
    }//GEN-LAST:event_jTB_canvasLockProportionItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCB_canvasEnableEnhacedMouse;
    private javax.swing.JCheckBox jCB_canvasNoTitle;
    private javax.swing.JCheckBox jCB_canvasUseCustomJsDirectory;
    private javax.swing.JComboBox jCoB_canvasUnits;
    private javax.swing.JLabel jL_canvasHeight;
    private javax.swing.JLabel jL_canvasTitle;
    private javax.swing.JLabel jL_canvasUnit;
    private javax.swing.JLabel jL_canvasWidth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jSpinner_canvasHeight;
    private javax.swing.JSpinner jSpinner_canvasLineWidth;
    private javax.swing.JSpinner jSpinner_canvasWidth;
    private javax.swing.JToggleButton jTB_canvasLockProportion;
    private javax.swing.JTextField jTF_canvasJsDirectoryName;
    private javax.swing.JTextField jTF_canvasTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public void configureTerminal() {
        CanvasConfiguration canvasConfiguration = (CanvasConfiguration) parent.getTerminalConfiguration(TerminalTypes.CANVAS);
        //Configure size
        canvasConfiguration.setSize(
                Utils.truncDouble(new Double(jSpinner_canvasWidth.getValue().toString()), 2),
                Utils.truncDouble(new Double(jSpinner_canvasHeight.getValue().toString()), 2));
        //Configure unit
        canvasConfiguration.setUnit(MeasureUnit.convert(jCoB_canvasUnits.getSelectedItem().toString()));
        //Configure title
        if (!jCB_canvasNoTitle.isSelected()) {
            canvasConfiguration.setTitle(jTF_canvasTitle.getText());
        } else {
            canvasConfiguration.setTitle("");
        }
        //Configure mouse
        canvasConfiguration.setEnhacedMouse(jCB_canvasEnableEnhacedMouse.isSelected());
        //Configure js dir
        if (jCB_canvasUseCustomJsDirectory.isSelected()) {
            canvasConfiguration.setJsDirectoryName(jTF_canvasJsDirectoryName.getText());
        } else {
            canvasConfiguration.setJsDirectoryName("plot_scripts");
        }
    }
}
