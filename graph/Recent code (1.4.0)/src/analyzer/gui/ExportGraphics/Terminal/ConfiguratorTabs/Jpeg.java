/* This file is part of TraceMetrics
 *
 * TraceMetrics is a trace file analyzer for Network Simulator 3 (www.nsnam.org).
 * The goal is to calculate useful metrics for research and performance measurement.
 * URL: www.tracemetrics.net
 *
 * Copyright (C) 2012  Luiz Felipe Zafra Saggioro
 * Copyright (C) 2012  Flavio Barbieri Gonzaga
 * Copyright (C) 2012  Reuel Ramos Ribeiro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package analyzer.gui.ExportGraphics.Terminal.ConfiguratorTabs;

import analyzer.controller.Utils;
import analyzer.gui.ExportGraphics.Terminal.TerminalConfigurations.JpegConfiguration;
import analyzer.gui.ExportGraphics.Terminal.TerminalConfigurator;
import analyzer.gui.ExportGraphics.Terminal.TerminalTypes;
import analyzer.gui.ExportGraphics.Terminal.MeasureUnit;

/**
 * A panel that will be used as tab on
 * <code>TerminalConfigurator</code> objects.
 *
 * @since 1.2.0
 */
public class Jpeg extends javax.swing.JPanel implements TabConfiguration {

    TerminalConfigurator parent;

    public Jpeg(TerminalConfigurator instance) {
        parent = instance;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jL_jpgWidth = new javax.swing.JLabel();
        jSpinner_jpgWidth = new javax.swing.JSpinner();
        jL_jpgHeight = new javax.swing.JLabel();
        jSpinner_jpgHeight = new javax.swing.JSpinner();
        jL_jpgUnit = new javax.swing.JLabel();
        jCoB_jpgUnits = new javax.swing.JComboBox();
        jCB_jpgInterlace = new javax.swing.JCheckBox();
        jTB_jpgLockProportion = new javax.swing.JToggleButton();

        jL_jpgWidth.setText("Width");

        jSpinner_jpgWidth.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner_jpgWidth.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(640.0d), Double.valueOf(10.0d), null, Double.valueOf(1.0d)));
        jSpinner_jpgWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_jpgWidthStateChanged(evt);
            }
        });

        jL_jpgHeight.setText("Height");

        jSpinner_jpgHeight.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jSpinner_jpgHeight.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(400.0d), Double.valueOf(10.0d), null, Double.valueOf(1.0d)));
        jSpinner_jpgHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_jpgHeightStateChanged(evt);
            }
        });

        jL_jpgUnit.setText("unit");

        jCoB_jpgUnits.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "px" }));

        jCB_jpgInterlace.setText("Use interlace");

        jTB_jpgLockProportion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/analyzer/gui/images/unlock-icon.png"))); // NOI18N
        jTB_jpgLockProportion.setRolloverEnabled(true);
        jTB_jpgLockProportion.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/analyzer/gui/images/unlock-icon.png"))); // NOI18N
        jTB_jpgLockProportion.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/analyzer/gui/images/lock-icon.png"))); // NOI18N
        jTB_jpgLockProportion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jTB_jpgLockProportionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCB_jpgInterlace)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jL_jpgWidth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner_jpgWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jL_jpgHeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner_jpgHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTB_jpgLockProportion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jL_jpgUnit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCoB_jpgUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCB_jpgInterlace)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jL_jpgWidth)
                    .addComponent(jSpinner_jpgWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_jpgHeight)
                    .addComponent(jSpinner_jpgHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTB_jpgLockProportion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_jpgUnit)
                    .addComponent(jCoB_jpgUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinner_jpgWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_jpgWidthStateChanged
        if (jTB_jpgLockProportion.isSelected()) {
            jSpinner_jpgHeight.setValue(new Double(jSpinner_jpgWidth.getValue().toString()) / parent.getTerminalConfiguration(TerminalTypes.JPEG).getProportion());
        }
    }//GEN-LAST:event_jSpinner_jpgWidthStateChanged

    private void jSpinner_jpgHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_jpgHeightStateChanged
        if (jTB_jpgLockProportion.isSelected()) {
            jSpinner_jpgWidth.setValue(new Double(jSpinner_jpgHeight.getValue().toString()) * parent.getTerminalConfiguration(TerminalTypes.JPEG).getProportion());
        }
    }//GEN-LAST:event_jSpinner_jpgHeightStateChanged

    private void jTB_jpgLockProportionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jTB_jpgLockProportionItemStateChanged
        if (jTB_jpgLockProportion.isSelected()) {
            parent.getTerminalConfiguration(TerminalTypes.JPEG).setProportion(new Double(jSpinner_jpgWidth.getValue().toString()), new Double(jSpinner_jpgHeight.getValue().toString()));
        }
    }//GEN-LAST:event_jTB_jpgLockProportionItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCB_jpgInterlace;
    private javax.swing.JComboBox jCoB_jpgUnits;
    private javax.swing.JLabel jL_jpgHeight;
    private javax.swing.JLabel jL_jpgUnit;
    private javax.swing.JLabel jL_jpgWidth;
    private javax.swing.JSpinner jSpinner_jpgHeight;
    private javax.swing.JSpinner jSpinner_jpgWidth;
    private javax.swing.JToggleButton jTB_jpgLockProportion;
    // End of variables declaration//GEN-END:variables

    @Override
    public void configureTerminal() {
        JpegConfiguration jpgConfiguration = (JpegConfiguration) parent.getTerminalConfiguration(TerminalTypes.JPEG);
        //Configure Size
        jpgConfiguration.setSize(Utils.truncDouble(new Double(jSpinner_jpgWidth.getValue().toString()), 2), Utils.truncDouble(new Double(jSpinner_jpgHeight.getValue().toString()), 2));
        //Configure unit
        jpgConfiguration.setUnit(MeasureUnit.convert(jCoB_jpgUnits.getSelectedItem().toString()));
        //Configure image option
        jpgConfiguration.setUseInterlace(jCB_jpgInterlace.isSelected());
    }
}
