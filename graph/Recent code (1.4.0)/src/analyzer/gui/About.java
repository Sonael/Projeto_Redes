 /*This file is part of TraceMetrics
 *
 * TraceMetrics is a trace file analyzer for Network Simulator 3 (www.nsnam.org).
 * The goal is to calculate useful metrics for research and performance measurement.
 * URL: www.tracemetrics.net
 *
 * Copyright (C) 2012  Luiz Felipe Zafra Saggioro
 * Copyright (C) 2012  Flavio Barbieri Gonzaga
 * Copyright (C) 2012  Reuel Ramos Ribeiro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package analyzer.gui;

import analyzer.controller.Utils;
import java.awt.Point;
import java.awt.Toolkit;

/**
 *
 * Class to show informations about the project, the development team and about
 * the release news.
 *
 * @since 1.1.0
 * @version 1.0
 */
public class About extends javax.swing.JFrame {

    /**
     * Creates new form About
     */
    public About() {
        initComponents();

        jL_Version.setText(jL_Version.getText() + Main.VERSION);

        Point location = Utils.getCentralCoords(Toolkit.getDefaultToolkit().getScreenSize(), this.getBounds());
        this.setLocation(location);
    }
    private static About instance = null;

    public static About getInstance() {
        if (instance == null) {
            instance = new About();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Logo_LARES = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTA_About = new javax.swing.JTextArea();
        jL_Version = new javax.swing.JLabel();
        jL_Copyleft = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTA_SupportedProtocols = new javax.swing.JTextArea();
        jL_SupportedProtocols = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("About");
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(248, 248, 248));

        Logo_LARES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/analyzer/gui/images/lares_logo.png"))); // NOI18N
        Logo_LARES.setLabelFor(Logo_LARES);
        Logo_LARES.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Logo_LARES.setOpaque(true);
        Logo_LARES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseAbout(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTA_About.setColumns(20);
        jTA_About.setEditable(false);
        jTA_About.setLineWrap(true);
        jTA_About.setRows(5);
        jTA_About.setText(" - TraceMetrics is a free open-source tool developed by LaReS (www.bcc.unifal-mg.edu.br/lares) from UNIFAL-MG (www.unifal-mg.edu.br). The tool is free distributed above de domain www.tracemetrics.net.\n\n - LaReS is a laboratory for research in networks and distributeds systems.\n\n - To enter in contact, please send a e-mail to tracemetrics (at) tracemetrics.net\n\nStackholders:\n\tLuiz Felipe Zafra Saggioro\n\tProf. Flavio Barbieri Gonzaga\n\tReuel Ramos Ribeiro\n\tAlberto Silveira Carilo");
        jTA_About.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTA_About);

        jL_Version.setText("Version: ");

        jL_Copyleft.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_Copyleft.setText("Copyleft  2011-2012 Tracemetrics");

        jTA_SupportedProtocols.setColumns(20);
        jTA_SupportedProtocols.setEditable(false);
        jTA_SupportedProtocols.setRows(5);
        jTA_SupportedProtocols.setText("ArpHeader\nPppHeader\nTcpHeader\nIcmpv6RS\nIcmpv6RA\nIcmpv6NS\nIcmpv6NA\nIcmpv6OptionLinkLayerAddress\nIpv6ExtensionLooseRoutingHeader\nIcmpv6Echo\nIpv6Header\nIpv6ExtensionFragmentHeader\nLlcSnapHeader\nIcmpv4Header\nIcmpv4DestinationUnreachable\nWifiMacTrailer\nAmsduSubframeHeader\nIpv4L3Protocol\nWifiMacHeader\nWifiMacHeaderMGT\nWifiMacHeaderCTL_RTS\nWifiMacHeaderCTL_CTS\nWifiMacHeaderCTL_ACK\nWifiMacHeaderCTL_BACKREQ\nWifiMacHeaderCTL_BACKRESP\nWifiMacHeaderDATA\nWifiMacHeaderQOSDATA\nWifiActionHeader\nMgtAddBaRequestHeader\nCtrlBAckRequestHeader\nCtrlBAckResponseHeader\nMgtProbeResponseHeader\nMgtAssocRequestHeader\nMgtAssocResponseHeader\nMgtProbeRequestHeader");
        jScrollPane2.setViewportView(jTA_SupportedProtocols);

        jL_SupportedProtocols.setText("Supported protocols");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(Logo_LARES)
                .addContainerGap(118, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(jL_Version, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addGap(278, 278, 278))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(269, Short.MAX_VALUE)
                .addComponent(jL_SupportedProtocols)
                .addGap(244, 244, 244))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(230, Short.MAX_VALUE)
                .addComponent(jL_Copyleft)
                .addGap(217, 217, 217))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Logo_LARES)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_Version)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_SupportedProtocols)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_Copyleft)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseAbout( java.awt.event.MouseEvent evt ) {//GEN-FIRST:event_CloseAbout
        instance = null;
        dispose();
    }//GEN-LAST:event_CloseAbout

    private void formWindowClosed( java.awt.event.WindowEvent evt ) {//GEN-FIRST:event_formWindowClosed
        instance = null;
        dispose();
    }//GEN-LAST:event_formWindowClosed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logo_LARES;
    private javax.swing.JLabel jL_Copyleft;
    private javax.swing.JLabel jL_SupportedProtocols;
    private javax.swing.JLabel jL_Version;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTA_About;
    private javax.swing.JTextArea jTA_SupportedProtocols;
    // End of variables declaration//GEN-END:variables
}
